"""empty message

Revision ID: 6f6afd688854
Revises: 
Create Date: 2023-03-14 11:57:59.113610

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6f6afd688854'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('client_id', sa.String(length=36), nullable=False),
    sa.Column('last_connected', sa.DateTime(), nullable=True),
    sa.Column('state', sa.Enum('OFFLINE', 'ONLINE', 'IDLE', 'BUSY', name='clientstate'), nullable=True),
    sa.PrimaryKeyConstraint('client_id')
    )
    op.create_table('compute',
    sa.Column('compute_id', sa.String(length=36), nullable=False),
    sa.Column('worker_id', sa.String(length=36), nullable=False),
    sa.Column('master_id', sa.String(length=36), nullable=False),
    sa.Column('target', sa.TEXT(), nullable=True),
    sa.Column('target_name', sa.String(length=1000), nullable=True),
    sa.Column('ligands', sa.TEXT(), nullable=True),
    sa.Column('ligands_name', sa.String(length=1000), nullable=True),
    sa.Column('result', sa.TEXT(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('state', sa.Enum('CREATED', 'STARTED', 'FINISHED', 'ERROR', name='computestate'), nullable=True),
    sa.Column('error', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('compute_id')
    )
    op.create_table('docking',
    sa.Column('docking_id', sa.String(length=36), nullable=False),
    sa.Column('master_id', sa.String(length=36), nullable=False),
    sa.Column('worker_ids', sa.JSON(), nullable=True),
    sa.Column('target', sa.TEXT(), nullable=True),
    sa.Column('target_name', sa.String(length=1000), nullable=True),
    sa.Column('ligand_ids', sa.JSON(), nullable=True),
    sa.Column('ligands_name', sa.String(length=1000), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('state', sa.Enum('CREATED', 'STARTED', 'FINISHED', 'ERROR', name='dockingstate'), nullable=True),
    sa.PrimaryKeyConstraint('docking_id')
    )
    with op.batch_alter_table('docking', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_docking_master_id'), ['master_id'], unique=False)

    op.create_table('master_notification',
    sa.Column('docking_id', sa.String(length=36), nullable=False),
    sa.Column('master_id', sa.String(length=36), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('docking_id')
    )
    with op.batch_alter_table('master_notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_master_notification_master_id'), ['master_id'], unique=False)

    op.create_table('request',
    sa.Column('master_id', sa.String(length=36), nullable=False),
    sa.Column('worker_id', sa.String(length=36), nullable=False),
    sa.Column('state_update_time', sa.DateTime(), nullable=False),
    sa.Column('state', sa.Enum('CREATED', 'ACCEPTED', 'REJECTED', name='requeststate'), nullable=True),
    sa.PrimaryKeyConstraint('master_id', 'worker_id')
    )
    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_request_worker_id'), ['worker_id'], unique=False)

    op.create_table('user',
    sa.Column('client_id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('client_id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('worker_notification',
    sa.Column('docking_id', sa.String(length=36), nullable=False),
    sa.Column('worker_id', sa.String(length=36), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('docking_id')
    )
    with op.batch_alter_table('worker_notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_worker_notification_worker_id'), ['worker_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('worker_notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_worker_notification_worker_id'))

    op.drop_table('worker_notification')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_request_worker_id'))

    op.drop_table('request')
    with op.batch_alter_table('master_notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_master_notification_master_id'))

    op.drop_table('master_notification')
    with op.batch_alter_table('docking', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_docking_master_id'))

    op.drop_table('docking')
    op.drop_table('compute')
    op.drop_table('client')
    # ### end Alembic commands ###
